В современных сайтах скрипты обычно «тяжелее», чем HTML: они весят больше, дольше обрабатываются.
Когда браузер загружает HTML и доходит до тега <script>...</script>, он не может продолжать строить DOM.
Есть два атрибута тега <script>, которые решают нашу проблему: defer и async.

1. Атрибут defer сообщает браузеру, что он должен продолжать обрабатывать страницу и загружать скрипт
в фоновом режиме, а затем запустить этот скрипт, когда он загрузится.
	а) Скрипты с defer никогда не блокируют страницу.
	б) Скрипты с defer всегда выполняются, когда дерево DOM готово, но до события DOMContentLoaded.


2. Атрибут async означает, что скрипт абсолютно независим:
	а) Страница не ждёт асинхронных скриптов, содержимое обрабатывается и отображается.
	б) Событие DOMContentLoaded и асинхронные скрипты не ждут друг друга.
	в) Остальные скрипты не ждут async, и скрипты casync не ждут другие скрипты.
Асинхронные скрипты очень полезны для добавления на страницу сторонних скриптов: 
счётчиков, рекламы и т.д. Они не зависят от наших скриптов, и мы тоже не должны ждать их: